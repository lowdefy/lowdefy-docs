id: lowdefy-file
type: page_sider_menu
public: true
properties:
  title: Lowdefy File
blocks:
  - id: card
    type: card
    blocks:
      - id: markdown
        type: markdown
        properties:
          content: |
            # Lowdefy Configuration File

            The configuration of a Lowdefy application is written in a JSON or YAML file called `lowdefy.json/yaml`, in the root directory of the GitHub project repository. YAML files are parsed (using node yaml module) and then converted into JSON.

            ## File structure
            <!--DOCUSAURUS_CODE_TABS-->
            <!--JSON-->
            ```json5
            // lowdefy.json
            {
              "layout": {
                "menu": [
                  // list of menu items
                ]
              }
              "connections": [
                // list of external data connections
              ],
              "pages": [
                // list of page objects
              ]
            }
            ```
            <!--YAML-->
            ```yaml
            # lowdefy.yaml
            layout:
              menu:
                -
                  # list of menu items
            connections:
              - 
                # list of external data connections
            pages:
              -
                # list of page objects
            ```
            <!--END_DOCUSAURUS_CODE_TABS-->

            ## Lowdefy Objects

            Since the configuration of a Lowdefy application consists of different objects, like [`pages`](pages), [`blocks`](blocks), [`connections`](connections) and [`requests`](requests-mutations).

            ### Lowdefy ids

            All Lowdefy objects require an `id`, which is used to identify this object.
            Ids should comply to the following rules:

            - It should be a string.
            - It may only consist of the characters `a-z, A-Z, 0-9, and _`.
            - It may not contain whitespace.
            - It may not start with a number.
            - It must contain at least one non-numeric character.
            - It may not start with `"lowdefy"` (Not case sensitive).
            - For objects on a page, the id needs to be unique. All other objects require a globally unique id.

            ### Object Types

            Most Lowdefy objects require a type. Some object like `pages` do not require a type since they can only have one type.

            ### Default Values

            Only the required fields need be specified for Lowdefy objects. If a field is not specified, a default value will be used. This default value can be:
            - A specific value. (If the password minimum length is not specified, a default of 8 is used)
            - A reference to another field. (If a title field is not specified, the name/id of that object will be used)
            - A empty array. (If the components array is not specified, an empty array is used, and no components are rendered)

            ### Path to a Object

            Any Lowdefy object can be referenced to by its path in the `lowdefy.json` file. This is often used to report where an error has occurred.
            See Lowdefy references for more details.

