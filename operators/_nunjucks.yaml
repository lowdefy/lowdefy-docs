id: _nunjucks
type: PageSiderMenu
public: true
properties:
  title: Nunjucks

actions:
  onInit:
    - id: set_state
      type: setState()
      params:
        string: A string value
        boolean: true
        # date:
        #   _date: now
        array_primitive:
          - 1
          - 2.5
          - 3000
        array_object:
          - test: true
            name: Adam
            value: 10
          - test: false
            name: Bob
            value: 50
          - test: true
            name: Carl
            value: 1000
        object:
          string: text
          boolean: false
          date:
            _date: "2000-01-01"
          array:
            - A
            - B
            - C

blocks:
  _ref: 
    path: operators/template_operators.yaml
    vars:
      operator_name: _nunjucks
      operator_title: Nunjucks
      description_content: |
        The `_nunjucks` operator renders a [Nunjucks](https://mozilla.github.io/nunjucks/templating.html) template and returns a string value.

        #### Parameters
        `_nunjucks` takes two parameters but can also be written in short-hand notation. The parameters are:

        - `on` : The JSON object on which the expression will be run.
        - `template` : The Nunjucks template which will be rendered. More tips on templating can be found[here.](https://jinja.palletsprojects.com/en/2.11.x/templates/).

        #### Dates
        Nunjucks can also handle [date](https://www.npmjs.com/package/nunjucks-date-filter) formatting and manipulation by implementing the [moment.js] date [formatting](https://momentjs.com/docs/#/displaying/format/) and [manipulation](https://momentjs.com/docs/#/get-set/) methods.
      operator_default: |
        template: "{{ text }} of the fields are {{ more_text }}."
        on:
          text: Some
          more_text: text
          array_primitive: [1,2,3]
      operator_setup:
        _ nunjucks:
          _load_yaml:
            _state: operator
      operator_output:
        _nunjucks: 
          _load_yaml:
            _state: operator
      
      # examples:
 